version: "3.7"

services:
  #  ______                     _   _
  # |  ____|                   | | (_)
  # | |__  __  _____  ___ _   _| |_ _  ___  _ __
  # |  __| \ \/ / _ \/ __| | | | __| |/ _ \| '_ \
  # | |____ >  <  __/ (__| |_| | |_| | (_) | | | |
  # |______/_/\_\___|\___|\__,_|\__|_|\___/|_| |_|
  #

  nethermind:
    image: nethermind/nethermind:${NETHERMIND_VERSION:-}
    restart: unless-stopped
    init: true
    networks: [cluster]
    ports:
      - "127.0.0.1:8545:8545" # JSON-RPC
      - "127.0.0.1:8645:8645" # JSON-RPC
    command: >-
      --config=${NETWORK:-mainnet}
      --datadir=/var/lib/nethermind
      --JsonRpc.Port=8545
      --JsonRpc.Host=0.0.0.0
      --JsonRpc.EnginePort=8551
      --JsonRpc.EngineHost=0.0.0.0
      --JsonRpc.JwtSecretFile="/jwt/jwtsecret"
      --JsonRpc.Enabled=true
      --HealthChecks.Enabled=true 
      --HealthChecks.UIEnabled=true
      --Metrics.Enabled=true
      --Metrics.ExposePort=8645
    environment:
      - DOTNET_BUNDLE_EXTRACT_BASE_DIR=/var/lib/nethermind
    volumes:
      - ${DATA_FOLDER:-./data}/.nethermind:/var/lib/nethermind
      - ./data/jwt:/jwt
    deploy:
      resources:
        limits:
          cpus: ${NETHERMIND_MAX_CPU:-1}
          memory: ${NETHERMIND_MAX_MEM:-16G}

  #   _____
  #  / ____|
  # | |     ___  _ __  ___  ___ _ __  ___ _   _ ___
  # | |    / _ \| '_ \/ __|/ _ \ '_ \/ __| | | / __|
  # | |___| (_) | | | \__ \  __/ | | \__ \ |_| \__ \
  #  \_____\___/|_| |_|___/\___|_| |_|___/\__,_|___/
  #

  # One would not run lighthouse archival and lighthouse normal at the same time
  # Keep in mind this is experimental
  lighthouse-archival:
    image: sigp/lighthouse:${LIGHTHOUSE_ARCHIVAL_TAG:-}
    restart: unless-stopped
    init: true
    networks: [cluster]
    ports:
      - "127.0.0.1:5054:5054" # Prometheus metrics
      - "127.0.0.1:5052:5052" # Rest API port
      - "${P2P_PORT:-9000}:${P2P_PORT:-9000}" # P2P port
      - "9001:9001" # QUIC port
    command: >-
      lighthouse
      --network="${NETWORK:-mainnet}"
      --debug-level=info
      beacon_node
      --datadir /var/lib/lighthouse
      --checkpoint-sync-url="${CHECKPOINT_SYNC_URL:-}"
      --reconstruct-historic-states
      --disable-backfill-rate-limiting
      --eth1
      --http
      --metrics
      --metrics-address=0.0.0.0
      --http-address=0.0.0.0
      --port="${P2P_PORT:-9000}"
      --execution-endpoints=http://nethermind:8551
      --jwt-secrets=/jwt/jwtsecret
      --suggested-fee-recipient="${FEE_RECIPIENT:-}"

    volumes:
      - ${DATA_FOLDER:-./data}/.lighthouse-archival:/var/lib/lighthouse
      - ./data/jwt:/jwt

  lighthouse:
    image: sigp/lighthouse:${LIGHTHOUSE_TAG:-}
    restart: unless-stopped
    init: true
    networks: [cluster]
    ports:
      - "127.0.0.1:5054:5054" # Prometheus metrics
      - "127.0.0.1:5052:5052" # Rest API port
      - "${P2P_PORT:-9000}:${P2P_PORT:-9000}" # P2P port
      - "9001:9001" # QUIC port
    command: >-
      lighthouse
      --network="${NETWORK:-mainnet}"
      --debug-level=info
      beacon_node
      --datadir /var/lib/lighthouse
      --checkpoint-sync-url="${CHECKPOINT_SYNC_URL:-}"
      --slots-per-restore-point="${SLOTS_PER_RESTORE_POINT:-8192}"
      --disable-backfill-rate-limiting
      --eth1
      --http
      --metrics
      --metrics-address=0.0.0.0
      --http-address=0.0.0.0
      --port="{P2P_PORT:-9000}"
      --execution-endpoints=http://nethermind:8551
      --jwt-secrets=/jwt/jwtsecret
      --suggested-fee-recipient="${FEE_RECIPIENT}"

    volumes:
      - ${DATA_FOLDER:-./data}/.lighthouse-archival:/var/lib/lighthouse
      - ./data/jwt:/jwt

  prysm:
    image: gcr.io/prysmaticlabs/prysm/beacon-chain:${PRYSM_TAG:-}
    restart: unless-stopped
    init: true
    networks: [cluster]
    ports:
      - "127.0.0.1:8080:8080" # Prometheus metrics
      - "127.0.0.1:3500:3500" # Rest API port
      - "${P2P_PORT:-13000}:${P2P_PORT:-13000}" # P2P port
      - "12000:12000" # P2P UDP port
      - "127.0.0.1:4000:4000" # For Prysm val
    command: >-
      --accept-terms-of-use
      --datadir=/var/lib/prysm
      --${NETWORK:-mainnet}
      --checkpoint-sync-url=${CHECKPOINT_SYNC_URL:-}
      --suggested-fee-recipient=${FEE_RECIPIENT:-}
      --execution-endpoint=http://nethermind:8551
      --monitoring-host=0.0.0.0
      --rpc-host=0.0.0.0
      --p2p-tcp-port=${P2P_PORT:-13000}
      --jwt-secret=/jwt/jwtsecret
      --log-file=/var/lib/prysm/prysm.log
    volumes:
      - ${DATA_FOLDER:-./data}/.prysm:/var/lib/prysm
      - ./data/jwt:/jwt

  teku:
    image: consensys/teku:${TEKU_TAG:-}
    restart: unless-stopped
    init: true
    networks: [cluster]
    user: ${UID}:${GID}
    ports:
      - "127.0.0.1:8008:8008" # Prometheus metrics
      - "127.0.0.1:5051:5051" # Rest port
      - "${P2P_PORT:-9000}:${P2P_PORT:-9000}" # P2P port
    command: >-
      --network=${NETWORK:-mainnet}
      --data-path=/var/lib/teku_beacon
      --checkpoint-sync-url=${CHECKPOINT_SYNC_URL:-}
      --ee-endpoint=http://nethermind:8551
      --ee-jwt-secret-file=/jwt/jwtsecret
      --validators-proposer-default-fee-recipient=${FEE_RECIPIENT:-}
      --metrics-enabled=true
      --metrics-interface=0.0.0.0
      --rest-api-enabled=true
      --rest-api-interface=0.0.0.0
      --rest-api-host-allowlist=*
      --beacon-liveness-tracking-enabled=true
      --p2p-port=${P2P_PORT:-9000}

    volumes:
      - ${DATA_FOLDER:-./data}/.teku:/var/lib/teku_beacon
      - ./data/jwt:/jwt
    # Check teku host directory permissions as it throws an error(777)

  nimbus-trusted-sync:
    image: statusim/nimbus-eth2:${NIMBUS_TAG:-}
    restart: "no"
    init: true
    user: ${UID}:${GID}
    networks: [cluster]
    command: >-
      --network=${NETWORK:-}
      trustedNodeSync
      --trusted-node-url="${CHECKPOINT_SYNC_URL:-}"
      --data-dir=/var/lib/nimbus_beacon
    volumes:
      - ${DATA_FOLDER:-./data}/.nimbus:/var/lib/nimbus_beacon

  nimbus:
    image: statusim/nimbus-eth2:${NIMBUS_TAG:-}
    restart: unless-stopped
    init: true
    user: ${UID}:${GID}
    networks: [cluster]
    ports:
      - "127.0.0.1:8009:8008" # Prometheus metrics
      - "127.0.0.1:5053:5052" # Rest Port
      - "${P2P_PORT:-9000}:${P2P_PORT:-9000}" # P2P port
    command: >-
      --network=${NETWORK:-}
      --web3-url=http://nethermind:8551
      --rest
      --metrics
      --jwt-secret=/jwt/jwtsecret
      --suggested-fee-recipient=${FEE_RECIPIENT:-}
      --log-file=/var/lib/jwtsecret/nimbus.log
      --metrics-address=0.0.0.0
      --tcp-port=${P2P_PORT:-9000} 
      --udp-port=${P2P_PORT:-9000}

    volumes:
      - ${DATA_FOLDER:-./data}/.nimbus:/var/lib/nimbus_beacon
      - ./data/jwt:/jwt

  lodestar:
    image: chainsafe/lodestar:${LODESTAR_TAG:-}
    restart: unless-stopped
    init: true
    networks: [cluster]
    ports:
      - "127.0.0.1:8010:8008" # Prometheus metrics
      - "127.0.0.1:9596:9596" # Rest port
      - "${P2P_PORT:-9000}:${P2P_PORT:-9000}" # P2P port
    command: >-
      beacon
      --network=${NETWORK:-mainnet}
      --dataDir=/var/lib/lodestar_beacon
      --checkpointSyncUrl=${CHECKPOINT_SYNC_URL:-}
      --execution.urls="http://nethermind:8551"
      --network.connectToDiscv5Bootnodes
      --suggestedFeeRecipient=${FEE_RECIPIENT:-}
      --jwt-secret="/jwt/jwtsecret"
      --logFile=/var/lib/lodestar_beacon/lodestar.log
      --metrics=true
      --metrics.address=0.0.0.0
      --rest.address=0.0.0.0
      --port=${P2P_PORT:-9000}
      --listenAddress=0.0.0.0

    volumes:
      - ${DATA_FOLDER:-./data}/.lodestar:/var/lib/lodestar_beacon
      - ./data/jwt:/jwt

  #   __  __             _ _             _
  #  |  \/  |           (_) |           (_)
  #  | \  / | ___  _ __  _| |_ ___  _ __ _ _ __   __ _
  #  | |\/| |/ _ \| '_ \| | __/ _ \| '__| | '_ \ / _` |
  #  | |  | | (_) | | | | | || (_) | |  | | | | | (_| |
  #  |_|  |_|\___/|_| |_|_|\__\___/|_|  |_|_| |_|\__, |
  #                                               __/ |
  #                                              |___/

  node-exporter:
    image: prom/node-exporter:latest
    network_mode: host
    command: >-
      --path.rootfs=/host
      --web.listen-address=localhost:9100
      --collector.textfile.directory=/textfiles
    pid: host
    restart: unless-stopped
    volumes:
      - "/:/host:ro,rslave"
      - ./apps-data/.node_exporter/textfiles:/textfiles/

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    networks: [cluster]
    ports:
      - "127.0.0.1:8090:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  prometheus:
    image: prom/prometheus:latest
    init: true
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./apps-data/.prometheus:/prometheus/data
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.listen-address=${PROMETHEUS_ADDRESS:-localhost:9090}"
      - "--storage.tsdb.retention.time=30d"
      - "--web.enable-remote-write-receiver"
    network_mode: "host"
    restart: unless-stopped

  # Reverse Proxy with Nginx
  # ----------------------------------------------
  # upstream grafana {
  #   server ip:3000;
  # }
  # location /path {
  #   rewrite  ^/path/(.*)  /$1 break;
  #   proxy_set_header Host $http_host;
  #   proxy_pass http://grafana;
  # }
  # ----------------------------------------------
  grafana:
    image: grafana/grafana:10.1.0-ubuntu
    init: true
    network_mode: "host"
    volumes:
      - ./apps-data/grafana:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SERVER_ROOT_URL=${GRAFANA_ROOT_URL}

  caddy:
    image: caddy:2.7.5
    restart: unless-stopped
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./site:/srv
      - ./caddy_data:/data
      - ./caddy_config:/config
      - ./certs:/certs
    network_mode: "host"

networks:
  cluster:
